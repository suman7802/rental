generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int            @id @default(autoincrement())
  uid         String         @unique
  email       String         @unique
  name        String?
  profile     String?
  verified    VerifiedStatus @default(notVerified)
  phone       String?
  latitude    Float?
  longitude   Float?
  FCMToken    String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  bio         String?
  govId       String?
  Unit        Unit[]
  Favorites   Favorite[]     @relation("userFavorites")
  FavoritedBy Favorite[]     @relation("FavoritesByUser")
}

model Favorite {
  id         Int      @id @default(autoincrement())
  user       User     @relation("userFavorites", fields: [userId], references: [uid])
  userId     String
  business   User     @relation("FavoritesByUser", fields: [businessId], references: [uid])
  businessId String
  createdAt  DateTime @default(now())
}

model Unit {
  id          Int            @id @default(autoincrement())
  User        User           @relation(fields: [user], references: [id], onDelete: Cascade)
  user        Int
  title       String
  description String
  latitude    Float?
  longitude   Float?
  rent        Float
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  Media       Media[]
  category    RentalCategory @default(place)
}

model Media {
  id        Int      @id @default(autoincrement())
  Unit      Unit     @relation(fields: [unit], references: [id], onDelete: Cascade)
  unit      Int
  url       String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum RentalCategory {
  ride
  thing
  place
}

enum VerifiedStatus {
  notVerified
  requested
  rejected
  verified
}
